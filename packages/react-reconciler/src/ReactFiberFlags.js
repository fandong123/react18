export const NoFlags =/*    */   0b00000000000000000000000000; // 标识位：无
export const Placement =/*    */ 0b00000000000000000000000010; // 标识位：插入
export const Update =/*    */    0b00000000000000000000000100; // 标识位：更新
export const ChildDeletion =/**/ 0b00000000000000000000001000; // 标识位：删除
export const Passive =/*      */ 0b00000000000000010000000000;
export const MutationMask = Placement | Update; // 变更标识位掩码
export const LayoutMask = Update;
/**
 *   逻辑位运算符
 * 
 * 
 * 位与(&) 如果两个位都是1，结果为1，否则结果0
  * let a = 5;      // 00000000000000000000000000000101
    a &= 3;        //  00000000000000000000000000000011

    console.log(a); // 00000000000000000000000000000001
    // expected output: 1


  位或(｜) 只要任一表达式的一位为 1，则结果中的该位为 1。否则，结果中的该位为 0
  let a = 5;      // 00000000000000000000000000000101
  a |= 3;        // 00000000000000000000000000000011

  console.log(a); // 00000000000000000000000000000111
  // expected output: 7


   位异或(^) 如果两个运算位相同，则结果为0，否则为1
  let a = 5;      // 00000000000000000000000000000101
  a ^= 3;         // 00000000000000000000000000000011

  console.log(a); // 00000000000000000000000000000110
  // expected output: 6

    位非(~) 按位取反操作会翻转其每一位。0变为1，1变为0

    const a = 5;     // 00000000000000000000000000000101
    const b = -3;    // 11111111111111111111111111111101

    console.log(~a); // 11111111111111111111111111111010
    // expected output: -6

    console.log(~b); // 00000000000000000000000000000010
    // expected output: 2


 * 
 *
 *  移位运算符
 * 
 *  移位运算符:（<<、>>和>>>）
 * 
 * let a = 5;      //  00000000000000000000000000000101
   a >>= 2;        //  00000000000000000000000000000001
   console.log(a);
   // expected output: 1


    let a = 5; // 00000000000000000000000000000101
    a <<= 2;   // 00000000000000000000000000010100

    console.log(a);
    // expected output: 20
 * 
*/
